   1               		.file	"simpleserial-aes.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	reset
  14               	reset:
  15               	.LFB14:
  16               		.file 1 "simpleserial-aes.c"
   1:simpleserial-aes.c **** /*
   2:simpleserial-aes.c ****     This file is part of the ChipWhisperer Example Targets
   3:simpleserial-aes.c ****     Copyright (C) 2012-2017 NewAE Technology Inc.
   4:simpleserial-aes.c **** 
   5:simpleserial-aes.c ****     This program is free software: you can redistribute it and/or modify
   6:simpleserial-aes.c ****     it under the terms of the GNU General Public License as published by
   7:simpleserial-aes.c ****     the Free Software Foundation, either version 3 of the License, or
   8:simpleserial-aes.c ****     (at your option) any later version.
   9:simpleserial-aes.c **** 
  10:simpleserial-aes.c ****     This program is distributed in the hope that it will be useful,
  11:simpleserial-aes.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:simpleserial-aes.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:simpleserial-aes.c ****     GNU General Public License for more details.
  14:simpleserial-aes.c **** 
  15:simpleserial-aes.c ****     You should have received a copy of the GNU General Public License
  16:simpleserial-aes.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:simpleserial-aes.c **** */
  18:simpleserial-aes.c **** 
  19:simpleserial-aes.c **** #include "aes-independant.h"
  20:simpleserial-aes.c **** #include "hal.h"
  21:simpleserial-aes.c **** #include "simpleserial.h"
  22:simpleserial-aes.c **** #include <stdint.h>
  23:simpleserial-aes.c **** #include <stdlib.h>
  24:simpleserial-aes.c **** 
  25:simpleserial-aes.c **** uint8_t get_mask(uint8_t* m)
  26:simpleserial-aes.c **** {
  27:simpleserial-aes.c ****   aes_indep_mask(m);
  28:simpleserial-aes.c ****   return 0x00;
  29:simpleserial-aes.c **** }
  30:simpleserial-aes.c **** 
  31:simpleserial-aes.c **** uint8_t get_key(uint8_t* k)
  32:simpleserial-aes.c **** {
  33:simpleserial-aes.c **** 	aes_indep_key(k);
  34:simpleserial-aes.c **** 	return 0x00;
  35:simpleserial-aes.c **** }
  36:simpleserial-aes.c **** 
  37:simpleserial-aes.c **** uint8_t get_pt(uint8_t* pt)
  38:simpleserial-aes.c **** {
  39:simpleserial-aes.c **** 	trigger_high();
  40:simpleserial-aes.c **** 
  41:simpleserial-aes.c ****   #ifdef ADD_JITTER
  42:simpleserial-aes.c ****   for (volatile uint8_t k = 0; k < (*pt & 0x0F); k++);
  43:simpleserial-aes.c ****   #endif
  44:simpleserial-aes.c **** 
  45:simpleserial-aes.c **** 	aes_indep_enc(pt); /* encrypting the data block */
  46:simpleserial-aes.c **** 	trigger_low();
  47:simpleserial-aes.c **** 	simpleserial_put('r', 16, pt);
  48:simpleserial-aes.c **** 	return 0x00;
  49:simpleserial-aes.c **** }
  50:simpleserial-aes.c **** 
  51:simpleserial-aes.c **** uint8_t reset(uint8_t* x)
  52:simpleserial-aes.c **** {
  17               		.loc 1 52 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  53:simpleserial-aes.c ****     // Reset key here if needed
  54:simpleserial-aes.c **** 	return 0x00;
  55:simpleserial-aes.c **** }
  24               		.loc 1 55 0
  25 0000 80E0      		ldi r24,0
  26               	.LVL1:
  27 0002 0895      		ret
  28               		.cfi_endproc
  29               	.LFE14:
  31               	.global	get_mask
  33               	get_mask:
  34               	.LFB11:
  26:simpleserial-aes.c ****   aes_indep_mask(m);
  35               		.loc 1 26 0
  36               		.cfi_startproc
  37               	.LVL2:
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  27:simpleserial-aes.c ****   return 0x00;
  42               		.loc 1 27 0
  43 0004 0E94 0000 		call aes_indep_mask
  44               	.LVL3:
  29:simpleserial-aes.c **** 
  45               		.loc 1 29 0
  46 0008 80E0      		ldi r24,0
  47 000a 0895      		ret
  48               		.cfi_endproc
  49               	.LFE11:
  51               	.global	get_key
  53               	get_key:
  54               	.LFB12:
  32:simpleserial-aes.c **** 	aes_indep_key(k);
  55               		.loc 1 32 0
  56               		.cfi_startproc
  57               	.LVL4:
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  33:simpleserial-aes.c **** 	return 0x00;
  62               		.loc 1 33 0
  63 000c 0E94 0000 		call aes_indep_key
  64               	.LVL5:
  35:simpleserial-aes.c **** 
  65               		.loc 1 35 0
  66 0010 80E0      		ldi r24,0
  67 0012 0895      		ret
  68               		.cfi_endproc
  69               	.LFE12:
  71               	.global	get_pt
  73               	get_pt:
  74               	.LFB13:
  38:simpleserial-aes.c **** 	trigger_high();
  75               		.loc 1 38 0
  76               		.cfi_startproc
  77               	.LVL6:
  78 0014 FF92      		push r15
  79               	.LCFI0:
  80               		.cfi_def_cfa_offset 4
  81               		.cfi_offset 15, -3
  82 0016 0F93      		push r16
  83               	.LCFI1:
  84               		.cfi_def_cfa_offset 5
  85               		.cfi_offset 16, -4
  86 0018 1F93      		push r17
  87               	.LCFI2:
  88               		.cfi_def_cfa_offset 6
  89               		.cfi_offset 17, -5
  90 001a CF93      		push r28
  91               	.LCFI3:
  92               		.cfi_def_cfa_offset 7
  93               		.cfi_offset 28, -6
  94 001c DF93      		push r29
  95               	.LCFI4:
  96               		.cfi_def_cfa_offset 8
  97               		.cfi_offset 29, -7
  98               	/* prologue: function */
  99               	/* frame size = 0 */
 100               	/* stack size = 5 */
 101               	.L__stack_usage = 5
 102 001e EC01      		movw r28,r24
  39:simpleserial-aes.c **** 
 103               		.loc 1 39 0
 104 0020 00E0      		ldi r16,0
 105 0022 16E0      		ldi r17,lo8(6)
 106 0024 FF24      		clr r15
 107 0026 F394      		inc r15
 108 0028 F801      		movw r30,r16
 109 002a F582      		std Z+5,r15
  45:simpleserial-aes.c **** 	trigger_low();
 110               		.loc 1 45 0
 111 002c 0E94 0000 		call aes_indep_enc
 112               	.LVL7:
  46:simpleserial-aes.c **** 	simpleserial_put('r', 16, pt);
 113               		.loc 1 46 0
 114 0030 F801      		movw r30,r16
 115 0032 F682      		std Z+6,r15
  47:simpleserial-aes.c **** 	return 0x00;
 116               		.loc 1 47 0
 117 0034 AE01      		movw r20,r28
 118 0036 60E1      		ldi r22,lo8(16)
 119 0038 70E0      		ldi r23,0
 120 003a 82E7      		ldi r24,lo8(114)
 121 003c 0E94 0000 		call simpleserial_put
 122               	.LVL8:
  49:simpleserial-aes.c **** 
 123               		.loc 1 49 0
 124 0040 80E0      		ldi r24,0
 125               	/* epilogue start */
 126 0042 DF91      		pop r29
 127 0044 CF91      		pop r28
 128               	.LVL9:
 129 0046 1F91      		pop r17
 130 0048 0F91      		pop r16
 131 004a FF90      		pop r15
 132 004c 0895      		ret
 133               		.cfi_endproc
 134               	.LFE13:
 136               		.section	.rodata
 137               	.LC0:
 138 0000 2B        		.byte	43
 139 0001 7E        		.byte	126
 140 0002 15        		.byte	21
 141 0003 16        		.byte	22
 142 0004 28        		.byte	40
 143 0005 AE        		.byte	-82
 144 0006 D2        		.byte	-46
 145 0007 A6        		.byte	-90
 146 0008 AB        		.byte	-85
 147 0009 F7        		.byte	-9
 148 000a 15        		.byte	21
 149 000b 88        		.byte	-120
 150 000c 09        		.byte	9
 151 000d CF        		.byte	-49
 152 000e 4F        		.byte	79
 153 000f 3C        		.byte	60
 154               		.section	.text.startup,"ax",@progbits
 155               	.global	main
 157               	main:
 158               	.LFB15:
  56:simpleserial-aes.c **** 
  57:simpleserial-aes.c **** int main(void)
  58:simpleserial-aes.c **** {
 159               		.loc 1 58 0
 160               		.cfi_startproc
 161 0000 CF93      		push r28
 162               	.LCFI5:
 163               		.cfi_def_cfa_offset 4
 164               		.cfi_offset 28, -3
 165 0002 DF93      		push r29
 166               	.LCFI6:
 167               		.cfi_def_cfa_offset 5
 168               		.cfi_offset 29, -4
 169 0004 CDB7      		in r28,__SP_L__
 170 0006 DEB7      		in r29,__SP_H__
 171               	.LCFI7:
 172               		.cfi_def_cfa_register 28
 173 0008 6097      		sbiw r28,16
 174               	.LCFI8:
 175               		.cfi_def_cfa_offset 21
 176 000a CDBF      		out __SP_L__,r28
 177 000c DEBF      		out __SP_H__,r29
 178               	/* prologue: function */
 179               	/* frame size = 16 */
 180               	/* stack size = 18 */
 181               	.L__stack_usage = 18
  59:simpleserial-aes.c **** 	uint8_t tmp[KEY_LENGTH] = {DEFAULT_KEY};
 182               		.loc 1 59 0
 183 000e 80E1      		ldi r24,lo8(16)
 184 0010 E0E0      		ldi r30,lo8(.LC0)
 185 0012 F0E0      		ldi r31,hi8(.LC0)
 186 0014 DE01      		movw r26,r28
 187 0016 1196      		adiw r26,1
 188               		0:
 189 0018 0190      		ld r0,Z+
 190 001a 0D92      		st X+,r0
 191 001c 8A95      		dec r24
 192 001e 01F4      		brne 0b
  60:simpleserial-aes.c **** 
  61:simpleserial-aes.c ****     platform_init();
 193               		.loc 1 61 0
 194 0020 0E94 0000 		call platform_init
 195               	.LVL10:
  62:simpleserial-aes.c ****     init_uart();
 196               		.loc 1 62 0
 197 0024 0E94 0000 		call init_uart0
 198               	.LVL11:
  63:simpleserial-aes.c ****     trigger_setup();
 199               		.loc 1 63 0
 200 0028 81E0      		ldi r24,lo8(1)
 201 002a 8093 0106 		sts 1537,r24
  64:simpleserial-aes.c **** 
  65:simpleserial-aes.c **** 	aes_indep_init();
 202               		.loc 1 65 0
 203 002e 0E94 0000 		call aes_indep_init
 204               	.LVL12:
  66:simpleserial-aes.c **** 	aes_indep_key(tmp);
 205               		.loc 1 66 0
 206 0032 CE01      		movw r24,r28
 207 0034 0196      		adiw r24,1
 208 0036 0E94 0000 		call aes_indep_key
 209               	.LVL13:
  67:simpleserial-aes.c **** 
  68:simpleserial-aes.c ****     /* Uncomment this to get a HELLO message for debug */
  69:simpleserial-aes.c **** 
  70:simpleserial-aes.c ****     putch('h');
 210               		.loc 1 70 0
 211 003a 88E6      		ldi r24,lo8(104)
 212 003c 0E94 0000 		call output_ch_0
 213               	.LVL14:
  71:simpleserial-aes.c ****     putch('e');
 214               		.loc 1 71 0
 215 0040 85E6      		ldi r24,lo8(101)
 216 0042 0E94 0000 		call output_ch_0
 217               	.LVL15:
  72:simpleserial-aes.c ****     putch('l');
 218               		.loc 1 72 0
 219 0046 8CE6      		ldi r24,lo8(108)
 220 0048 0E94 0000 		call output_ch_0
 221               	.LVL16:
  73:simpleserial-aes.c ****     putch('l');
 222               		.loc 1 73 0
 223 004c 8CE6      		ldi r24,lo8(108)
 224 004e 0E94 0000 		call output_ch_0
 225               	.LVL17:
  74:simpleserial-aes.c ****     putch('o');
 226               		.loc 1 74 0
 227 0052 8FE6      		ldi r24,lo8(111)
 228 0054 0E94 0000 		call output_ch_0
 229               	.LVL18:
  75:simpleserial-aes.c ****     putch('\n');
 230               		.loc 1 75 0
 231 0058 8AE0      		ldi r24,lo8(10)
 232 005a 0E94 0000 		call output_ch_0
 233               	.LVL19:
  76:simpleserial-aes.c **** 
  77:simpleserial-aes.c **** 	simpleserial_init();
 234               		.loc 1 77 0
 235 005e 0E94 0000 		call simpleserial_init
 236               	.LVL20:
  78:simpleserial-aes.c ****     simpleserial_addcmd('k', 16, get_key);
 237               		.loc 1 78 0
 238 0062 40E0      		ldi r20,lo8(gs(get_key))
 239 0064 50E0      		ldi r21,hi8(gs(get_key))
 240 0066 60E1      		ldi r22,lo8(16)
 241 0068 70E0      		ldi r23,0
 242 006a 8BE6      		ldi r24,lo8(107)
 243 006c 0E94 0000 		call simpleserial_addcmd
 244               	.LVL21:
  79:simpleserial-aes.c ****     simpleserial_addcmd('p', 16,  get_pt);
 245               		.loc 1 79 0
 246 0070 40E0      		ldi r20,lo8(gs(get_pt))
 247 0072 50E0      		ldi r21,hi8(gs(get_pt))
 248 0074 60E1      		ldi r22,lo8(16)
 249 0076 70E0      		ldi r23,0
 250 0078 80E7      		ldi r24,lo8(112)
 251 007a 0E94 0000 		call simpleserial_addcmd
 252               	.LVL22:
  80:simpleserial-aes.c ****     simpleserial_addcmd('x',  0,   reset);
 253               		.loc 1 80 0
 254 007e 40E0      		ldi r20,lo8(gs(reset))
 255 0080 50E0      		ldi r21,hi8(gs(reset))
 256 0082 60E0      		ldi r22,0
 257 0084 70E0      		ldi r23,0
 258 0086 88E7      		ldi r24,lo8(120)
 259 0088 0E94 0000 		call simpleserial_addcmd
 260               	.LVL23:
  81:simpleserial-aes.c ****     simpleserial_addcmd('m', 18, get_mask);
 261               		.loc 1 81 0
 262 008c 40E0      		ldi r20,lo8(gs(get_mask))
 263 008e 50E0      		ldi r21,hi8(gs(get_mask))
 264 0090 62E1      		ldi r22,lo8(18)
 265 0092 70E0      		ldi r23,0
 266 0094 8DE6      		ldi r24,lo8(109)
 267 0096 0E94 0000 		call simpleserial_addcmd
 268               	.LVL24:
 269               	.L6:
  82:simpleserial-aes.c ****     while(1)
  83:simpleserial-aes.c ****         simpleserial_get();
 270               		.loc 1 83 0 discriminator 1
 271 009a 0E94 0000 		call simpleserial_get
 272               	.LVL25:
 273 009e 00C0      		rjmp .L6
 274               		.cfi_endproc
 275               	.LFE15:
 277               		.text
 278               	.Letext0:
 279               		.file 2 "/usr/lib/avr/include/stdint.h"
 280               		.file 3 "/usr/lib/avr/include/avr/iox128d3.h"
 281               		.file 4 ".././crypto/aes-independant.h"
 282               		.file 5 ".././simpleserial/simpleserial.h"
 283               		.file 6 ".././hal/hal.h"
 284               		.file 7 ".././hal/xmega/uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 simpleserial-aes.c
     /tmp/ccjirp5H.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccjirp5H.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccjirp5H.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccjirp5H.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccjirp5H.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccjirp5H.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccjirp5H.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccjirp5H.s:14     .text:0000000000000000 reset
     /tmp/ccjirp5H.s:33     .text:0000000000000004 get_mask
     /tmp/ccjirp5H.s:53     .text:000000000000000c get_key
     /tmp/ccjirp5H.s:73     .text:0000000000000014 get_pt
     /tmp/ccjirp5H.s:157    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
aes_indep_mask
aes_indep_key
aes_indep_enc
simpleserial_put
platform_init
init_uart0
aes_indep_init
output_ch_0
simpleserial_init
simpleserial_addcmd
simpleserial_get
__do_copy_data
