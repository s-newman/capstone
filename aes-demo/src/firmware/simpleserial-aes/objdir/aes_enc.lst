   1               		.file	"aes_enc.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	aes_shiftcol
  14               	aes_shiftcol:
  15               	.LFB1:
  16               		.file 1 ".././crypto/avrcryptolib//aes/aes_enc.c"
   1:.././crypto/avrcryptolib//aes/aes_enc.c **** /* aes_enc.c */
   2:.././crypto/avrcryptolib//aes/aes_enc.c **** /*
   3:.././crypto/avrcryptolib//aes/aes_enc.c ****     This file is part of the AVR-Crypto-Lib.
   4:.././crypto/avrcryptolib//aes/aes_enc.c ****     Copyright (C) 2008  Daniel Otte (daniel.otte@rub.de)
   5:.././crypto/avrcryptolib//aes/aes_enc.c **** 
   6:.././crypto/avrcryptolib//aes/aes_enc.c ****     This program is free software: you can redistribute it and/or modify
   7:.././crypto/avrcryptolib//aes/aes_enc.c ****     it under the terms of the GNU General Public License as published by
   8:.././crypto/avrcryptolib//aes/aes_enc.c ****     the Free Software Foundation, either version 3 of the License, or
   9:.././crypto/avrcryptolib//aes/aes_enc.c ****     (at your option) any later version.
  10:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  11:.././crypto/avrcryptolib//aes/aes_enc.c ****     This program is distributed in the hope that it will be useful,
  12:.././crypto/avrcryptolib//aes/aes_enc.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:.././crypto/avrcryptolib//aes/aes_enc.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:.././crypto/avrcryptolib//aes/aes_enc.c ****     GNU General Public License for more details.
  15:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  16:.././crypto/avrcryptolib//aes/aes_enc.c ****     You should have received a copy of the GNU General Public License
  17:.././crypto/avrcryptolib//aes/aes_enc.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:.././crypto/avrcryptolib//aes/aes_enc.c **** */
  19:.././crypto/avrcryptolib//aes/aes_enc.c **** /**
  20:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \file     aes_enc.c
  21:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \email    daniel.otte@rub.de
  22:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \author   Daniel Otte 
  23:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \date     2008-12-30
  24:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \license  GPLv3 or later
  25:.././crypto/avrcryptolib//aes/aes_enc.c ****  * 
  26:.././crypto/avrcryptolib//aes/aes_enc.c ****  */
  27:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  28:.././crypto/avrcryptolib//aes/aes_enc.c **** #include <stdint.h>
  29:.././crypto/avrcryptolib//aes/aes_enc.c **** #include <string.h>
  30:.././crypto/avrcryptolib//aes/aes_enc.c **** #include "aes.h"
  31:.././crypto/avrcryptolib//aes/aes_enc.c **** #include "gf256mul.h"
  32:.././crypto/avrcryptolib//aes/aes_enc.c **** #include "aes_sbox.h"
  33:.././crypto/avrcryptolib//aes/aes_enc.c **** #include "aes_enc.h"
  34:.././crypto/avrcryptolib//aes/aes_enc.c **** #include <avr/pgmspace.h>
  35:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  36:.././crypto/avrcryptolib//aes/aes_enc.c **** void aes_shiftcol(void* data, uint8_t shift){
  17               		.loc 1 36 0
  18               		.cfi_startproc
  19               	.LVL0:
  20 0000 CF93      		push r28
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 4
  23               		.cfi_offset 28, -3
  24 0002 DF93      		push r29
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 5
  27               		.cfi_offset 29, -4
  28 0004 00D0      		rcall .
  29 0006 1F92      		push __zero_reg__
  30               	.LCFI2:
  31               		.cfi_def_cfa_offset 9
  32 0008 CDB7      		in r28,__SP_L__
  33 000a DEB7      		in r29,__SP_H__
  34               	.LCFI3:
  35               		.cfi_def_cfa_register 28
  36               	/* prologue: function */
  37               	/* frame size = 4 */
  38               	/* stack size = 6 */
  39               	.L__stack_usage = 6
  40 000c DC01      		movw r26,r24
  37:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t tmp[4];
  38:.././crypto/avrcryptolib//aes/aes_enc.c **** 	tmp[0] = ((uint8_t*)data)[ 0];
  41               		.loc 1 38 0
  42 000e 8C91      		ld r24,X
  43               	.LVL1:
  44 0010 8983      		std Y+1,r24
  39:.././crypto/avrcryptolib//aes/aes_enc.c **** 	tmp[1] = ((uint8_t*)data)[ 4];
  45               		.loc 1 39 0
  46 0012 1496      		adiw r26,4
  47 0014 8C91      		ld r24,X
  48 0016 1497      		sbiw r26,4
  49 0018 8A83      		std Y+2,r24
  40:.././crypto/avrcryptolib//aes/aes_enc.c **** 	tmp[2] = ((uint8_t*)data)[ 8];
  50               		.loc 1 40 0
  51 001a 1896      		adiw r26,8
  52 001c 8C91      		ld r24,X
  53 001e 1897      		sbiw r26,8
  54 0020 8B83      		std Y+3,r24
  41:.././crypto/avrcryptolib//aes/aes_enc.c **** 	tmp[3] = ((uint8_t*)data)[12];
  55               		.loc 1 41 0
  56 0022 1C96      		adiw r26,12
  57 0024 8C91      		ld r24,X
  58 0026 1C97      		sbiw r26,12
  59 0028 8C83      		std Y+4,r24
  42:.././crypto/avrcryptolib//aes/aes_enc.c **** 	((uint8_t*)data)[ 0] = tmp[(shift+0)&3];
  60               		.loc 1 42 0
  61 002a 862F      		mov r24,r22
  62 002c 8370      		andi r24,lo8(3)
  63 002e E1E0      		ldi r30,lo8(1)
  64 0030 F0E0      		ldi r31,0
  65 0032 EC0F      		add r30,r28
  66 0034 FD1F      		adc r31,r29
  67 0036 E80F      		add r30,r24
  68 0038 F11D      		adc r31,__zero_reg__
  69 003a 8081      		ld r24,Z
  70 003c 8C93      		st X,r24
  43:.././crypto/avrcryptolib//aes/aes_enc.c **** 	((uint8_t*)data)[ 4] = tmp[(shift+1)&3];
  71               		.loc 1 43 0
  72 003e 70E0      		ldi r23,0
  73 0040 FB01      		movw r30,r22
  74 0042 3196      		adiw r30,1
  75 0044 E370      		andi r30,3
  76 0046 FF27      		clr r31
  77 0048 81E0      		ldi r24,lo8(1)
  78 004a 90E0      		ldi r25,0
  79 004c 8C0F      		add r24,r28
  80 004e 9D1F      		adc r25,r29
  81 0050 E80F      		add r30,r24
  82 0052 F91F      		adc r31,r25
  83 0054 8081      		ld r24,Z
  84 0056 1496      		adiw r26,4
  85 0058 8C93      		st X,r24
  86 005a 1497      		sbiw r26,4
  44:.././crypto/avrcryptolib//aes/aes_enc.c **** 	((uint8_t*)data)[ 8] = tmp[(shift+2)&3];
  87               		.loc 1 44 0
  88 005c FB01      		movw r30,r22
  89 005e 3296      		adiw r30,2
  90 0060 E370      		andi r30,3
  91 0062 FF27      		clr r31
  92 0064 81E0      		ldi r24,lo8(1)
  93 0066 90E0      		ldi r25,0
  94 0068 8C0F      		add r24,r28
  95 006a 9D1F      		adc r25,r29
  96 006c E80F      		add r30,r24
  97 006e F91F      		adc r31,r25
  98 0070 8081      		ld r24,Z
  99 0072 1896      		adiw r26,8
 100 0074 8C93      		st X,r24
 101 0076 1897      		sbiw r26,8
  45:.././crypto/avrcryptolib//aes/aes_enc.c **** 	((uint8_t*)data)[12] = tmp[(shift+3)&3];
 102               		.loc 1 45 0
 103 0078 FB01      		movw r30,r22
 104 007a 3396      		adiw r30,3
 105 007c E370      		andi r30,3
 106 007e FF27      		clr r31
 107 0080 81E0      		ldi r24,lo8(1)
 108 0082 90E0      		ldi r25,0
 109 0084 8C0F      		add r24,r28
 110 0086 9D1F      		adc r25,r29
 111 0088 E80F      		add r30,r24
 112 008a F91F      		adc r31,r25
 113 008c 8081      		ld r24,Z
 114 008e 1C96      		adiw r26,12
 115 0090 8C93      		st X,r24
 116               	/* epilogue start */
  46:.././crypto/avrcryptolib//aes/aes_enc.c **** }
 117               		.loc 1 46 0
 118 0092 2496      		adiw r28,4
 119 0094 CDBF      		out __SP_L__,r28
 120 0096 DEBF      		out __SP_H__,r29
 121 0098 DF91      		pop r29
 122 009a CF91      		pop r28
 123 009c 0895      		ret
 124               		.cfi_endproc
 125               	.LFE1:
 127               	.global	aes_encrypt_core
 129               	aes_encrypt_core:
 130               	.LFB4:
  47:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  48:.././crypto/avrcryptolib//aes/aes_enc.c **** #define GF256MUL_1(a) (a)
  49:.././crypto/avrcryptolib//aes/aes_enc.c **** #define GF256MUL_2(a) (gf256mul(2, (a), 0x1b))
  50:.././crypto/avrcryptolib//aes/aes_enc.c **** #define GF256MUL_3(a) (gf256mul(3, (a), 0x1b))
  51:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  52:.././crypto/avrcryptolib//aes/aes_enc.c **** static
  53:.././crypto/avrcryptolib//aes/aes_enc.c **** void aes_enc_round(aes_cipher_state_t* state, const aes_roundkey_t* k){
  54:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t tmp[16], t;
  55:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t i;
  56:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* subBytes */
  57:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
  58:.././crypto/avrcryptolib//aes/aes_enc.c **** 		tmp[i] = pgm_read_byte(aes_sbox+state->s[i]);
  59:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
  60:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* shiftRows */
  61:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+1, 1);
  62:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+2, 2);
  63:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+3, 3);
  64:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* mixColums */
  65:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<4; ++i){
  66:.././crypto/avrcryptolib//aes/aes_enc.c **** 		t = tmp[4*i+0] ^ tmp[4*i+1] ^ tmp[4*i+2] ^ tmp[4*i+3];
  67:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+0] =
  68:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+0]^tmp[4*i+1])
  69:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+0]
  70:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ t;
  71:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+1] =
  72:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+1]^tmp[4*i+2])
  73:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+1]
  74:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ t;
  75:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+2] =
  76:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+2]^tmp[4*i+3])
  77:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+2]
  78:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ t;
  79:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+3] =
  80:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+3]^tmp[4*i+0])
  81:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+3]
  82:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ t;
  83:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
  84:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  85:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* addKey */
  86:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
  87:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= k->ks[i];
  88:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
  89:.././crypto/avrcryptolib//aes/aes_enc.c **** }
  90:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  91:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  92:.././crypto/avrcryptolib//aes/aes_enc.c **** static
  93:.././crypto/avrcryptolib//aes/aes_enc.c **** void aes_enc_lastround(aes_cipher_state_t* state,const aes_roundkey_t* k){
  94:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t i;
  95:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* subBytes */
  96:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
  97:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] = pgm_read_byte(aes_sbox+state->s[i]);
  98:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
  99:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* shiftRows */
 100:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+1, 1);
 101:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+2, 2);
 102:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+3, 3);
 103:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* keyAdd */
 104:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
 105:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= k->ks[i];
 106:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 107:.././crypto/avrcryptolib//aes/aes_enc.c **** }
 108:.././crypto/avrcryptolib//aes/aes_enc.c **** 
 109:.././crypto/avrcryptolib//aes/aes_enc.c **** void aes_encrypt_core(aes_cipher_state_t* state, const aes_genctx_t* ks, uint8_t rounds){
 131               		.loc 1 109 0
 132               		.cfi_startproc
 133               	.LVL2:
 134 009e 2F92      		push r2
 135               	.LCFI4:
 136               		.cfi_def_cfa_offset 4
 137               		.cfi_offset 2, -3
 138 00a0 3F92      		push r3
 139               	.LCFI5:
 140               		.cfi_def_cfa_offset 5
 141               		.cfi_offset 3, -4
 142 00a2 4F92      		push r4
 143               	.LCFI6:
 144               		.cfi_def_cfa_offset 6
 145               		.cfi_offset 4, -5
 146 00a4 5F92      		push r5
 147               	.LCFI7:
 148               		.cfi_def_cfa_offset 7
 149               		.cfi_offset 5, -6
 150 00a6 6F92      		push r6
 151               	.LCFI8:
 152               		.cfi_def_cfa_offset 8
 153               		.cfi_offset 6, -7
 154 00a8 7F92      		push r7
 155               	.LCFI9:
 156               		.cfi_def_cfa_offset 9
 157               		.cfi_offset 7, -8
 158 00aa 8F92      		push r8
 159               	.LCFI10:
 160               		.cfi_def_cfa_offset 10
 161               		.cfi_offset 8, -9
 162 00ac 9F92      		push r9
 163               	.LCFI11:
 164               		.cfi_def_cfa_offset 11
 165               		.cfi_offset 9, -10
 166 00ae AF92      		push r10
 167               	.LCFI12:
 168               		.cfi_def_cfa_offset 12
 169               		.cfi_offset 10, -11
 170 00b0 BF92      		push r11
 171               	.LCFI13:
 172               		.cfi_def_cfa_offset 13
 173               		.cfi_offset 11, -12
 174 00b2 CF92      		push r12
 175               	.LCFI14:
 176               		.cfi_def_cfa_offset 14
 177               		.cfi_offset 12, -13
 178 00b4 DF92      		push r13
 179               	.LCFI15:
 180               		.cfi_def_cfa_offset 15
 181               		.cfi_offset 13, -14
 182 00b6 EF92      		push r14
 183               	.LCFI16:
 184               		.cfi_def_cfa_offset 16
 185               		.cfi_offset 14, -15
 186 00b8 FF92      		push r15
 187               	.LCFI17:
 188               		.cfi_def_cfa_offset 17
 189               		.cfi_offset 15, -16
 190 00ba 0F93      		push r16
 191               	.LCFI18:
 192               		.cfi_def_cfa_offset 18
 193               		.cfi_offset 16, -17
 194 00bc 1F93      		push r17
 195               	.LCFI19:
 196               		.cfi_def_cfa_offset 19
 197               		.cfi_offset 17, -18
 198 00be CF93      		push r28
 199               	.LCFI20:
 200               		.cfi_def_cfa_offset 20
 201               		.cfi_offset 28, -19
 202 00c0 DF93      		push r29
 203               	.LCFI21:
 204               		.cfi_def_cfa_offset 21
 205               		.cfi_offset 29, -20
 206 00c2 CDB7      		in r28,__SP_L__
 207 00c4 DEB7      		in r29,__SP_H__
 208               	.LCFI22:
 209               		.cfi_def_cfa_register 28
 210 00c6 6397      		sbiw r28,19
 211               	.LCFI23:
 212               		.cfi_def_cfa_offset 40
 213 00c8 CDBF      		out __SP_L__,r28
 214 00ca DEBF      		out __SP_H__,r29
 215               	/* prologue: function */
 216               	/* frame size = 19 */
 217               	/* stack size = 37 */
 218               	.L__stack_usage = 37
 219 00cc 7C01      		movw r14,r24
 220 00ce 5B01      		movw r10,r22
 221 00d0 242E      		mov r2,r20
 222               	.LVL3:
 223 00d2 DB01      		movw r26,r22
 224 00d4 8A8B      		std Y+18,r24
 225 00d6 9B8B      		std Y+19,r25
 226 00d8 2C01      		movw r4,r24
 227 00da 20E1      		ldi r18,16
 228 00dc 420E      		add r4,r18
 229 00de 511C      		adc r5,__zero_reg__
 230               		.loc 1 109 0
 231 00e0 FC01      		movw r30,r24
 232               	.LVL4:
 233               	.L3:
 110:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t i;
 111:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
 112:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= ks->key[0].ks[i];
 234               		.loc 1 112 0 discriminator 3
 235 00e2 8D91      		ld r24,X+
 236 00e4 9081      		ld r25,Z
 237 00e6 8927      		eor r24,r25
 238 00e8 8193      		st Z+,r24
 239               	.LVL5:
 111:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= ks->key[0].ks[i];
 240               		.loc 1 111 0 discriminator 3
 241 00ea E415      		cp r30,r4
 242 00ec F505      		cpc r31,r5
 243 00ee 01F4      		brne .L3
 244 00f0 4501      		movw r8,r10
 245 00f2 30E1      		ldi r19,16
 246 00f4 830E      		add r8,r19
 247 00f6 911C      		adc r9,__zero_reg__
 111:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= ks->key[0].ks[i];
 248               		.loc 1 111 0 is_stmt 0
 249 00f8 81E0      		ldi r24,lo8(1)
 250 00fa 898B      		std Y+17,r24
 251 00fc 3E01      		movw r6,r28
 252 00fe A1E1      		ldi r26,17
 253 0100 6A0E      		add r6,r26
 254 0102 711C      		adc r7,__zero_reg__
 255               	.LVL6:
 256               	.L4:
 113:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 114:.././crypto/avrcryptolib//aes/aes_enc.c **** 	i=1;
 115:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(;rounds>1;--rounds){
 257               		.loc 1 115 0 is_stmt 1 discriminator 1
 258 0104 21E0      		ldi r18,lo8(1)
 259 0106 2215      		cp r18,r2
 260 0108 00F0      		brlo .+2
 261 010a 00C0      		rjmp .L18
 262               	.LVL7:
 263 010c 8E01      		movw r16,r28
 264 010e 0F5F      		subi r16,-1
 265 0110 1F4F      		sbci r17,-1
 266               		.loc 1 115 0 is_stmt 0 discriminator 2
 267 0112 D801      		movw r26,r16
 268 0114 C701      		movw r24,r14
 269               	.LVL8:
 270               	.L5:
 271               	.LBB8:
 272               	.LBB9:
 273               	.LBB10:
  58:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 274               		.loc 1 58 0 is_stmt 1
 275 0116 FC01      		movw r30,r24
 276 0118 2191      		ld r18,Z+
 277 011a CF01      		movw r24,r30
 278               	.LVL9:
 279 011c E22F      		mov r30,r18
 280 011e F0E0      		ldi r31,0
 281 0120 E050      		subi r30,lo8(-(aes_sbox))
 282 0122 F040      		sbci r31,hi8(-(aes_sbox))
 283               	/* #APP */
 284               	 ;  58 ".././crypto/avrcryptolib//aes/aes_enc.c" 1
 285 0124 E491      		lpm r30, Z
 286               		
 287               	 ;  0 "" 2
 288               	.LVL10:
 289               	/* #NOAPP */
 290               	.LBE10:
 291 0126 ED93      		st X+,r30
 292               	.LVL11:
  57:.././crypto/avrcryptolib//aes/aes_enc.c **** 		tmp[i] = pgm_read_byte(aes_sbox+state->s[i]);
 293               		.loc 1 57 0
 294 0128 A615      		cp r26,r6
 295 012a B705      		cpc r27,r7
 296 012c 01F4      		brne .L5
  61:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+2, 2);
 297               		.loc 1 61 0
 298 012e 61E0      		ldi r22,lo8(1)
 299 0130 CE01      		movw r24,r28
 300               	.LVL12:
 301 0132 0296      		adiw r24,2
 302 0134 0E94 0000 		call aes_shiftcol
 303               	.LVL13:
  62:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+3, 3);
 304               		.loc 1 62 0
 305 0138 62E0      		ldi r22,lo8(2)
 306 013a CE01      		movw r24,r28
 307 013c 0396      		adiw r24,3
 308 013e 0E94 0000 		call aes_shiftcol
 309               	.LVL14:
  63:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* mixColums */
 310               		.loc 1 63 0
 311 0142 63E0      		ldi r22,lo8(3)
 312 0144 CE01      		movw r24,r28
 313 0146 0496      		adiw r24,4
 314 0148 0E94 0000 		call aes_shiftcol
 315               	.LVL15:
 316 014c 6701      		movw r12,r14
 317               	.LVL16:
 318               	.L6:
  66:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+0] =
 319               		.loc 1 66 0
 320 014e D801      		movw r26,r16
 321 0150 6C91      		ld r22,X
 322 0152 1196      		adiw r26,1
 323 0154 8C91      		ld r24,X
 324 0156 1197      		sbiw r26,1
 325 0158 6827      		eor r22,r24
 326 015a 1296      		adiw r26,2
 327 015c 3C90      		ld r3,X
 328 015e 1297      		sbiw r26,2
 329 0160 1396      		adiw r26,3
 330 0162 8C91      		ld r24,X
 331 0164 3826      		eor r3,r24
 332 0166 3626      		eor r3,r22
 333               	.LVL17:
  68:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+0]
 334               		.loc 1 68 0
 335 0168 4BE1      		ldi r20,lo8(27)
 336 016a 82E0      		ldi r24,lo8(2)
 337 016c 0E94 0000 		call gf256mul
 338               	.LVL18:
  67:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+0]^tmp[4*i+1])
 339               		.loc 1 67 0
 340 0170 F801      		movw r30,r16
 341 0172 9081      		ld r25,Z
 342 0174 8927      		eor r24,r25
 343 0176 8325      		eor r24,r3
 344 0178 D601      		movw r26,r12
 345 017a 8C93      		st X,r24
  72:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+1]
 346               		.loc 1 72 0
 347 017c 6181      		ldd r22,Z+1
 348 017e 8281      		ldd r24,Z+2
 349 0180 6827      		eor r22,r24
 350 0182 4BE1      		ldi r20,lo8(27)
 351 0184 82E0      		ldi r24,lo8(2)
 352 0186 0E94 0000 		call gf256mul
 353               	.LVL19:
  71:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+1]^tmp[4*i+2])
 354               		.loc 1 71 0
 355 018a F801      		movw r30,r16
 356 018c 9181      		ldd r25,Z+1
 357 018e 8927      		eor r24,r25
 358 0190 8325      		eor r24,r3
 359 0192 D601      		movw r26,r12
 360 0194 1196      		adiw r26,1
 361 0196 8C93      		st X,r24
  76:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+2]
 362               		.loc 1 76 0
 363 0198 6281      		ldd r22,Z+2
 364 019a 8381      		ldd r24,Z+3
 365 019c 6827      		eor r22,r24
 366 019e 4BE1      		ldi r20,lo8(27)
 367 01a0 82E0      		ldi r24,lo8(2)
 368 01a2 0E94 0000 		call gf256mul
 369               	.LVL20:
  75:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+2]^tmp[4*i+3])
 370               		.loc 1 75 0
 371 01a6 F801      		movw r30,r16
 372 01a8 9281      		ldd r25,Z+2
 373 01aa 8927      		eor r24,r25
 374 01ac 8325      		eor r24,r3
 375 01ae D601      		movw r26,r12
 376 01b0 1296      		adiw r26,2
 377 01b2 8C93      		st X,r24
  80:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+3]
 378               		.loc 1 80 0
 379 01b4 6381      		ldd r22,Z+3
 380 01b6 8081      		ld r24,Z
 381 01b8 6827      		eor r22,r24
 382 01ba 4BE1      		ldi r20,lo8(27)
 383 01bc 82E0      		ldi r24,lo8(2)
 384 01be 0E94 0000 		call gf256mul
 385               	.LVL21:
  79:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+3]^tmp[4*i+0])
 386               		.loc 1 79 0
 387 01c2 F801      		movw r30,r16
 388 01c4 9381      		ldd r25,Z+3
 389 01c6 8927      		eor r24,r25
 390 01c8 3826      		eor r3,r24
 391               	.LVL22:
 392 01ca D601      		movw r26,r12
 393 01cc 1396      		adiw r26,3
 394 01ce 3C92      		st X,r3
 395 01d0 0C5F      		subi r16,-4
 396 01d2 1F4F      		sbci r17,-1
 397 01d4 B4E0      		ldi r27,4
 398 01d6 CB0E      		add r12,r27
 399 01d8 D11C      		adc r13,__zero_reg__
  65:.././crypto/avrcryptolib//aes/aes_enc.c **** 		t = tmp[4*i+0] ^ tmp[4*i+1] ^ tmp[4*i+2] ^ tmp[4*i+3];
 400               		.loc 1 65 0
 401 01da 0615      		cp r16,r6
 402 01dc 1705      		cpc r17,r7
 403 01de 01F0      		breq .+2
 404 01e0 00C0      		rjmp .L6
 405 01e2 F701      		movw r30,r14
 406 01e4 80E0      		ldi r24,0
 407 01e6 90E0      		ldi r25,0
 408               	.L7:
 409               	.LVL23:
  87:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 410               		.loc 1 87 0
 411 01e8 D401      		movw r26,r8
 412 01ea A80F      		add r26,r24
 413 01ec B91F      		adc r27,r25
 414 01ee 3081      		ld r19,Z
 415 01f0 2C91      		ld r18,X
 416 01f2 2327      		eor r18,r19
 417 01f4 2193      		st Z+,r18
 418               	.LVL24:
 419 01f6 0196      		adiw r24,1
 420               	.LVL25:
  86:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= k->ks[i];
 421               		.loc 1 86 0
 422 01f8 8031      		cpi r24,16
 423 01fa 9105      		cpc r25,__zero_reg__
 424 01fc 01F4      		brne .L7
 425               	.LVL26:
 426               	.LBE9:
 427               	.LBE8:
 116:.././crypto/avrcryptolib//aes/aes_enc.c **** 		aes_enc_round(state, &(ks->key[i]));
 117:.././crypto/avrcryptolib//aes/aes_enc.c **** 		++i;
 428               		.loc 1 117 0
 429 01fe E989      		ldd r30,Y+17
 430 0200 EF5F      		subi r30,lo8(-(1))
 431 0202 E98B      		std Y+17,r30
 432               	.LVL27:
 115:.././crypto/avrcryptolib//aes/aes_enc.c **** 		aes_enc_round(state, &(ks->key[i]));
 433               		.loc 1 115 0
 434 0204 2A94      		dec r2
 435               	.LVL28:
 436 0206 F0E1      		ldi r31,16
 437 0208 8F0E      		add r8,r31
 438 020a 911C      		adc r9,__zero_reg__
 439 020c 00C0      		rjmp .L4
 440               	.LVL29:
 441               	.L18:
 118:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 119:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_enc_lastround(state, &(ks->key[i]));
 442               		.loc 1 119 0
 443 020e D701      		movw r26,r14
 444               	.LVL30:
 445               	.L9:
 446               	.LBB11:
 447               	.LBB12:
 448               	.LBB13:
  97:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 449               		.loc 1 97 0
 450 0210 EC91      		ld r30,X
 451 0212 F0E0      		ldi r31,0
 452 0214 E050      		subi r30,lo8(-(aes_sbox))
 453 0216 F040      		sbci r31,hi8(-(aes_sbox))
 454               	/* #APP */
 455               	 ;  97 ".././crypto/avrcryptolib//aes/aes_enc.c" 1
 456 0218 E491      		lpm r30, Z
 457               		
 458               	 ;  0 "" 2
 459               	.LVL31:
 460               	/* #NOAPP */
 461               	.LBE13:
 462 021a ED93      		st X+,r30
 463               	.LVL32:
  96:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] = pgm_read_byte(aes_sbox+state->s[i]);
 464               		.loc 1 96 0
 465 021c A415      		cp r26,r4
 466 021e B505      		cpc r27,r5
 467 0220 01F4      		brne .L9
 100:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+2, 2);
 468               		.loc 1 100 0
 469 0222 61E0      		ldi r22,lo8(1)
 470 0224 C701      		movw r24,r14
 471 0226 0196      		adiw r24,1
 472 0228 0E94 0000 		call aes_shiftcol
 473               	.LVL33:
 101:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+3, 3);
 474               		.loc 1 101 0
 475 022c 62E0      		ldi r22,lo8(2)
 476 022e C701      		movw r24,r14
 477 0230 0296      		adiw r24,2
 478 0232 0E94 0000 		call aes_shiftcol
 479               	.LVL34:
 102:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* keyAdd */
 480               		.loc 1 102 0
 481 0236 63E0      		ldi r22,lo8(3)
 482 0238 C701      		movw r24,r14
 483 023a 0396      		adiw r24,3
 484 023c 0E94 0000 		call aes_shiftcol
 485               	.LVL35:
 486 0240 A989      		ldd r26,Y+17
 487 0242 30E1      		ldi r19,lo8(16)
 488 0244 A39F      		mul r26,r19
 489 0246 C001      		movw r24,r0
 490 0248 1124      		clr __zero_reg__
 491 024a 20E0      		ldi r18,0
 492 024c 30E0      		ldi r19,0
 493               	.LVL36:
 494               	.L10:
 105:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 495               		.loc 1 105 0
 496 024e FC01      		movw r30,r24
 497 0250 E20F      		add r30,r18
 498 0252 F31F      		adc r31,r19
 499 0254 EA0D      		add r30,r10
 500 0256 FB1D      		adc r31,r11
 501 0258 AA89      		ldd r26,Y+18
 502 025a BB89      		ldd r27,Y+19
 503 025c 5C91      		ld r21,X
 504 025e 4081      		ld r20,Z
 505 0260 4527      		eor r20,r21
 506 0262 4D93      		st X+,r20
 507 0264 AA8B      		std Y+18,r26
 508 0266 BB8B      		std Y+19,r27
 509               	.LVL37:
 510 0268 2F5F      		subi r18,-1
 511 026a 3F4F      		sbci r19,-1
 512               	.LVL38:
 104:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= k->ks[i];
 513               		.loc 1 104 0
 514 026c 2031      		cpi r18,16
 515 026e 3105      		cpc r19,__zero_reg__
 516 0270 01F4      		brne .L10
 517               	/* epilogue start */
 518               	.LBE12:
 519               	.LBE11:
 120:.././crypto/avrcryptolib//aes/aes_enc.c **** }
 520               		.loc 1 120 0
 521 0272 6396      		adiw r28,19
 522 0274 CDBF      		out __SP_L__,r28
 523 0276 DEBF      		out __SP_H__,r29
 524 0278 DF91      		pop r29
 525 027a CF91      		pop r28
 526 027c 1F91      		pop r17
 527 027e 0F91      		pop r16
 528 0280 FF90      		pop r15
 529 0282 EF90      		pop r14
 530               	.LVL39:
 531 0284 DF90      		pop r13
 532 0286 CF90      		pop r12
 533 0288 BF90      		pop r11
 534 028a AF90      		pop r10
 535               	.LVL40:
 536 028c 9F90      		pop r9
 537 028e 8F90      		pop r8
 538 0290 7F90      		pop r7
 539 0292 6F90      		pop r6
 540 0294 5F90      		pop r5
 541 0296 4F90      		pop r4
 542               	.LVL41:
 543 0298 3F90      		pop r3
 544 029a 2F90      		pop r2
 545               	.LVL42:
 546 029c 0895      		ret
 547               		.cfi_endproc
 548               	.LFE4:
 550               	.Letext0:
 551               		.file 2 "/usr/lib/avr/include/stdint.h"
 552               		.file 3 ".././crypto/avrcryptolib//aes/aes_types.h"
 553               		.file 4 ".././crypto/avrcryptolib//aes/aes_sbox.h"
 554               		.file 5 ".././crypto/avrcryptolib//gf256mul/gf256mul.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes_enc.c
     /tmp/ccwzWo7Z.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccwzWo7Z.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccwzWo7Z.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccwzWo7Z.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccwzWo7Z.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccwzWo7Z.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccwzWo7Z.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccwzWo7Z.s:14     .text:0000000000000000 aes_shiftcol
     /tmp/ccwzWo7Z.s:129    .text:000000000000009e aes_encrypt_core

UNDEFINED SYMBOLS
aes_sbox
gf256mul
